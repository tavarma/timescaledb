\ir include/insert_single.sql
\ir create_single_db.sql
SET client_min_messages = WARNING;
DROP DATABASE IF EXISTS single;
SET client_min_messages = NOTICE;
CREATE DATABASE single;
\c single
CREATE EXTENSION IF NOT EXISTS timescaledb;
SET timescaledb.disable_optimizations = :DISABLE_OPTIMIZATIONS;
\c single
CREATE TABLE PUBLIC."one_Partition" (
  "timeCustom" BIGINT NOT NULL,
  device_id TEXT NOT NULL,
  series_0 DOUBLE PRECISION NULL,
  series_1 DOUBLE PRECISION NULL,
  series_2 DOUBLE PRECISION NULL,
  series_bool BOOLEAN NULL
);
CREATE INDEX ON PUBLIC."one_Partition" (device_id, "timeCustom" DESC NULLS LAST) WHERE device_id IS NOT NULL;
CREATE INDEX ON PUBLIC."one_Partition" ("timeCustom" DESC NULLS LAST, series_0) WHERE series_0 IS NOT NULL;
CREATE INDEX ON PUBLIC."one_Partition" ("timeCustom" DESC NULLS LAST, series_1)  WHERE series_1 IS NOT NULL;
CREATE INDEX ON PUBLIC."one_Partition" ("timeCustom" DESC NULLS LAST, series_2) WHERE series_2 IS NOT NULL;
CREATE INDEX ON PUBLIC."one_Partition" ("timeCustom" DESC NULLS LAST, series_bool) WHERE series_bool IS NOT NULL;
SELECT * FROM create_hypertable('"public"."one_Partition"', 'timeCustom', associated_schema_name=>'one_Partition', chunk_time_interval=>_timescaledb_internal.interval_to_usec('1 month'));
 create_hypertable 
-------------------
 
(1 row)

--output command tags
\set QUIET off
BEGIN;
BEGIN
\COPY "one_Partition" FROM 'data/ds1_dev1_1.tsv' NULL AS '';
COPY 7
COMMIT;
COMMIT
INSERT INTO "one_Partition"("timeCustom", device_id, series_0, series_1) VALUES
(1257987600000000000, 'dev1', 1.5, 1),
(1257987600000000000, 'dev1', 1.5, 2),
(1257894000000000000, 'dev2', 1.5, 1),
(1257894002000000000, 'dev1', 2.5, 3);
INSERT 0 4
INSERT INTO "one_Partition"("timeCustom", device_id, series_0, series_1) VALUES
(1257894000000000000, 'dev2', 1.5, 2);
INSERT 0 1
\set QUIET on
\d+ "one_Partition".*
Index "one_Partition.1-one_Partition_device_id_timeCustom_idx"
   Column   |  Type  |  Definition  | Storage  
------------+--------+--------------+----------
 device_id  | text   | device_id    | extended
 timeCustom | bigint | "timeCustom" | plain
btree, for table "one_Partition._hyper_1_1_chunk", predicate (device_id IS NOT NULL)

Index "one_Partition.10-one_Partition_timeCustom_series_2_idx"
   Column   |       Type       |  Definition  | Storage 
------------+------------------+--------------+---------
 timeCustom | bigint           | "timeCustom" | plain
 series_2   | double precision | series_2     | plain
btree, for table "one_Partition._hyper_1_2_chunk", predicate (series_2 IS NOT NULL)

Index "one_Partition.11-one_Partition_timeCustom_series_bool_idx"
   Column    |  Type   |  Definition  | Storage 
-------------+---------+--------------+---------
 timeCustom  | bigint  | "timeCustom" | plain
 series_bool | boolean | series_bool  | plain
btree, for table "one_Partition._hyper_1_2_chunk", predicate (series_bool IS NOT NULL)

Index "one_Partition.12-one_Partition_timeCustom_idx"
   Column   |  Type  |  Definition  | Storage 
------------+--------+--------------+---------
 timeCustom | bigint | "timeCustom" | plain
btree, for table "one_Partition._hyper_1_2_chunk"

Index "one_Partition.13-one_Partition_device_id_timeCustom_idx"
   Column   |  Type  |  Definition  | Storage  
------------+--------+--------------+----------
 device_id  | text   | device_id    | extended
 timeCustom | bigint | "timeCustom" | plain
btree, for table "one_Partition._hyper_1_3_chunk", predicate (device_id IS NOT NULL)

Index "one_Partition.14-one_Partition_timeCustom_series_0_idx"
   Column   |       Type       |  Definition  | Storage 
------------+------------------+--------------+---------
 timeCustom | bigint           | "timeCustom" | plain
 series_0   | double precision | series_0     | plain
btree, for table "one_Partition._hyper_1_3_chunk", predicate (series_0 IS NOT NULL)

Index "one_Partition.15-one_Partition_timeCustom_series_1_idx"
   Column   |       Type       |  Definition  | Storage 
------------+------------------+--------------+---------
 timeCustom | bigint           | "timeCustom" | plain
 series_1   | double precision | series_1     | plain
btree, for table "one_Partition._hyper_1_3_chunk", predicate (series_1 IS NOT NULL)

Index "one_Partition.16-one_Partition_timeCustom_series_2_idx"
   Column   |       Type       |  Definition  | Storage 
------------+------------------+--------------+---------
 timeCustom | bigint           | "timeCustom" | plain
 series_2   | double precision | series_2     | plain
btree, for table "one_Partition._hyper_1_3_chunk", predicate (series_2 IS NOT NULL)

Index "one_Partition.17-one_Partition_timeCustom_series_bool_idx"
   Column    |  Type   |  Definition  | Storage 
-------------+---------+--------------+---------
 timeCustom  | bigint  | "timeCustom" | plain
 series_bool | boolean | series_bool  | plain
btree, for table "one_Partition._hyper_1_3_chunk", predicate (series_bool IS NOT NULL)

Index "one_Partition.18-one_Partition_timeCustom_idx"
   Column   |  Type  |  Definition  | Storage 
------------+--------+--------------+---------
 timeCustom | bigint | "timeCustom" | plain
btree, for table "one_Partition._hyper_1_3_chunk"

Index "one_Partition.2-one_Partition_timeCustom_series_0_idx"
   Column   |       Type       |  Definition  | Storage 
------------+------------------+--------------+---------
 timeCustom | bigint           | "timeCustom" | plain
 series_0   | double precision | series_0     | plain
btree, for table "one_Partition._hyper_1_1_chunk", predicate (series_0 IS NOT NULL)

Index "one_Partition.3-one_Partition_timeCustom_series_1_idx"
   Column   |       Type       |  Definition  | Storage 
------------+------------------+--------------+---------
 timeCustom | bigint           | "timeCustom" | plain
 series_1   | double precision | series_1     | plain
btree, for table "one_Partition._hyper_1_1_chunk", predicate (series_1 IS NOT NULL)

Index "one_Partition.4-one_Partition_timeCustom_series_2_idx"
   Column   |       Type       |  Definition  | Storage 
------------+------------------+--------------+---------
 timeCustom | bigint           | "timeCustom" | plain
 series_2   | double precision | series_2     | plain
btree, for table "one_Partition._hyper_1_1_chunk", predicate (series_2 IS NOT NULL)

Index "one_Partition.5-one_Partition_timeCustom_series_bool_idx"
   Column    |  Type   |  Definition  | Storage 
-------------+---------+--------------+---------
 timeCustom  | bigint  | "timeCustom" | plain
 series_bool | boolean | series_bool  | plain
btree, for table "one_Partition._hyper_1_1_chunk", predicate (series_bool IS NOT NULL)

Index "one_Partition.6-one_Partition_timeCustom_idx"
   Column   |  Type  |  Definition  | Storage 
------------+--------+--------------+---------
 timeCustom | bigint | "timeCustom" | plain
btree, for table "one_Partition._hyper_1_1_chunk"

Index "one_Partition.7-one_Partition_device_id_timeCustom_idx"
   Column   |  Type  |  Definition  | Storage  
------------+--------+--------------+----------
 device_id  | text   | device_id    | extended
 timeCustom | bigint | "timeCustom" | plain
btree, for table "one_Partition._hyper_1_2_chunk", predicate (device_id IS NOT NULL)

Index "one_Partition.8-one_Partition_timeCustom_series_0_idx"
   Column   |       Type       |  Definition  | Storage 
------------+------------------+--------------+---------
 timeCustom | bigint           | "timeCustom" | plain
 series_0   | double precision | series_0     | plain
btree, for table "one_Partition._hyper_1_2_chunk", predicate (series_0 IS NOT NULL)

Index "one_Partition.9-one_Partition_timeCustom_series_1_idx"
   Column   |       Type       |  Definition  | Storage 
------------+------------------+--------------+---------
 timeCustom | bigint           | "timeCustom" | plain
 series_1   | double precision | series_1     | plain
btree, for table "one_Partition._hyper_1_2_chunk", predicate (series_1 IS NOT NULL)

                       Table "one_Partition._hyper_1_1_chunk"
   Column    |       Type       | Modifiers | Storage  | Stats target | Description 
-------------+------------------+-----------+----------+--------------+-------------
 timeCustom  | bigint           | not null  | plain    |              | 
 device_id   | text             | not null  | extended |              | 
 series_0    | double precision |           | plain    |              | 
 series_1    | double precision |           | plain    |              | 
 series_2    | double precision |           | plain    |              | 
 series_bool | boolean          |           | plain    |              | 
Indexes:
    "1-one_Partition_device_id_timeCustom_idx" btree (device_id, "timeCustom" DESC NULLS LAST) WHERE device_id IS NOT NULL
    "2-one_Partition_timeCustom_series_0_idx" btree ("timeCustom" DESC NULLS LAST, series_0) WHERE series_0 IS NOT NULL
    "3-one_Partition_timeCustom_series_1_idx" btree ("timeCustom" DESC NULLS LAST, series_1) WHERE series_1 IS NOT NULL
    "4-one_Partition_timeCustom_series_2_idx" btree ("timeCustom" DESC NULLS LAST, series_2) WHERE series_2 IS NOT NULL
    "5-one_Partition_timeCustom_series_bool_idx" btree ("timeCustom" DESC NULLS LAST, series_bool) WHERE series_bool IS NOT NULL
    "6-one_Partition_timeCustom_idx" btree ("timeCustom" DESC)
Check constraints:
    "constraint_1" CHECK ("timeCustom" >= '1257892416000000000'::bigint AND "timeCustom" < '1257895008000000000'::bigint)
Inherits: "one_Partition"

                       Table "one_Partition._hyper_1_2_chunk"
   Column    |       Type       | Modifiers | Storage  | Stats target | Description 
-------------+------------------+-----------+----------+--------------+-------------
 timeCustom  | bigint           | not null  | plain    |              | 
 device_id   | text             | not null  | extended |              | 
 series_0    | double precision |           | plain    |              | 
 series_1    | double precision |           | plain    |              | 
 series_2    | double precision |           | plain    |              | 
 series_bool | boolean          |           | plain    |              | 
Indexes:
    "10-one_Partition_timeCustom_series_2_idx" btree ("timeCustom" DESC NULLS LAST, series_2) WHERE series_2 IS NOT NULL
    "11-one_Partition_timeCustom_series_bool_idx" btree ("timeCustom" DESC NULLS LAST, series_bool) WHERE series_bool IS NOT NULL
    "12-one_Partition_timeCustom_idx" btree ("timeCustom" DESC)
    "7-one_Partition_device_id_timeCustom_idx" btree (device_id, "timeCustom" DESC NULLS LAST) WHERE device_id IS NOT NULL
    "8-one_Partition_timeCustom_series_0_idx" btree ("timeCustom" DESC NULLS LAST, series_0) WHERE series_0 IS NOT NULL
    "9-one_Partition_timeCustom_series_1_idx" btree ("timeCustom" DESC NULLS LAST, series_1) WHERE series_1 IS NOT NULL
Check constraints:
    "constraint_2" CHECK ("timeCustom" >= '1257897600000000000'::bigint AND "timeCustom" < '1257900192000000000'::bigint)
Inherits: "one_Partition"

                       Table "one_Partition._hyper_1_3_chunk"
   Column    |       Type       | Modifiers | Storage  | Stats target | Description 
-------------+------------------+-----------+----------+--------------+-------------
 timeCustom  | bigint           | not null  | plain    |              | 
 device_id   | text             | not null  | extended |              | 
 series_0    | double precision |           | plain    |              | 
 series_1    | double precision |           | plain    |              | 
 series_2    | double precision |           | plain    |              | 
 series_bool | boolean          |           | plain    |              | 
Indexes:
    "13-one_Partition_device_id_timeCustom_idx" btree (device_id, "timeCustom" DESC NULLS LAST) WHERE device_id IS NOT NULL
    "14-one_Partition_timeCustom_series_0_idx" btree ("timeCustom" DESC NULLS LAST, series_0) WHERE series_0 IS NOT NULL
    "15-one_Partition_timeCustom_series_1_idx" btree ("timeCustom" DESC NULLS LAST, series_1) WHERE series_1 IS NOT NULL
    "16-one_Partition_timeCustom_series_2_idx" btree ("timeCustom" DESC NULLS LAST, series_2) WHERE series_2 IS NOT NULL
    "17-one_Partition_timeCustom_series_bool_idx" btree ("timeCustom" DESC NULLS LAST, series_bool) WHERE series_bool IS NOT NULL
    "18-one_Partition_timeCustom_idx" btree ("timeCustom" DESC)
Check constraints:
    "constraint_3" CHECK ("timeCustom" >= '1257985728000000000'::bigint AND "timeCustom" < '1257988320000000000'::bigint)
Inherits: "one_Partition"

SELECT * FROM "one_Partition" ORDER BY "timeCustom", device_id;
     timeCustom      | device_id | series_0 | series_1 | series_2 | series_bool 
---------------------+-----------+----------+----------+----------+-------------
 1257894000000000000 | dev1      |      1.5 |        1 |        2 | t
 1257894000000000000 | dev1      |      1.5 |        2 |          | 
 1257894000000000000 | dev2      |      1.5 |        1 |          | 
 1257894000000000000 | dev2      |      1.5 |        2 |          | 
 1257894000000001000 | dev1      |      2.5 |        3 |          | 
 1257894001000000000 | dev1      |      3.5 |        4 |          | 
 1257894002000000000 | dev1      |      2.5 |        3 |          | 
 1257894002000000000 | dev1      |      5.5 |        6 |          | t
 1257894002000000000 | dev1      |      5.5 |        7 |          | f
 1257897600000000000 | dev1      |      4.5 |        5 |          | f
 1257987600000000000 | dev1      |      1.5 |        1 |          | 
 1257987600000000000 | dev1      |      1.5 |        2 |          | 
(12 rows)

--test that we can insert data into a 1-dimensional table (only time partitioning)
CREATE TABLE "1dim"(time timestamp PRIMARY KEY, temp float);
SELECT create_hypertable('"1dim"', 'time');
 create_hypertable 
-------------------
 
(1 row)

INSERT INTO "1dim" VALUES('2017-01-20T09:00:01', 22.5) RETURNING *;
           time           | temp 
--------------------------+------
 Fri Jan 20 09:00:01 2017 | 22.5
(1 row)

INSERT INTO "1dim" VALUES('2017-01-20T09:00:21', 21.2);
INSERT INTO "1dim" VALUES('2017-01-20T09:00:47', 25.1);
SELECT * FROM "1dim";
           time           | temp 
--------------------------+------
 Fri Jan 20 09:00:01 2017 | 22.5
 Fri Jan 20 09:00:21 2017 | 21.2
 Fri Jan 20 09:00:47 2017 | 25.1
(3 rows)

CREATE TABLE regular_table (time timestamp, temp float);
INSERT INTO regular_table SELECT * FROM "1dim";
SELECT * FROM regular_table;
           time           | temp 
--------------------------+------
 Fri Jan 20 09:00:01 2017 | 22.5
 Fri Jan 20 09:00:21 2017 | 21.2
 Fri Jan 20 09:00:47 2017 | 25.1
(3 rows)

TRUNCATE TABLE regular_table;
INSERT INTO regular_table VALUES('2017-01-20T09:00:59', 29.2);
INSERT INTO "1dim" SELECT * FROM regular_table;
SELECT * FROM "1dim";
           time           | temp 
--------------------------+------
 Fri Jan 20 09:00:01 2017 | 22.5
 Fri Jan 20 09:00:21 2017 | 21.2
 Fri Jan 20 09:00:47 2017 | 25.1
 Fri Jan 20 09:00:59 2017 | 29.2
(4 rows)

SELECT "1dim" FROM "1dim";
               1dim                
-----------------------------------
 ("Fri Jan 20 09:00:01 2017",22.5)
 ("Fri Jan 20 09:00:21 2017",21.2)
 ("Fri Jan 20 09:00:47 2017",25.1)
 ("Fri Jan 20 09:00:59 2017",29.2)
(4 rows)

--test that we can insert pre-1970 dates
CREATE TABLE "1dim_pre1970"(time timestamp PRIMARY KEY, temp float);
SELECT create_hypertable('"1dim_pre1970"', 'time', chunk_time_interval=> INTERVAL '1 Month');
 create_hypertable 
-------------------
 
(1 row)

INSERT INTO "1dim_pre1970" VALUES('1969-12-01T19:00:00', 21.2);
INSERT INTO "1dim_pre1970" VALUES('1969-12-20T09:00:00', 25.1);
INSERT INTO "1dim_pre1970" VALUES('1970-01-20T09:00:00', 26.6);
INSERT INTO "1dim_pre1970" VALUES('1969-02-20T09:00:00', 29.9);
--should show warning
BEGIN;
CREATE TABLE "1dim_usec_interval"(time timestamp PRIMARY KEY, temp float);
SELECT create_hypertable('"1dim_usec_interval"', 'time', chunk_time_interval=> 10);
WARNING:  You specified a chunk_time_interval of less than a second, make sure that this is what you intended
 create_hypertable 
-------------------
 
(1 row)

INSERT INTO "1dim_usec_interval" VALUES('1969-12-01T19:00:00', 21.2);
ROLLBACK;
CREATE TABLE "1dim_usec_interval"(time timestamp PRIMARY KEY, temp float);
SELECT create_hypertable('"1dim_usec_interval"', 'time', chunk_time_interval=> 1000000);
 create_hypertable 
-------------------
 
(1 row)

INSERT INTO "1dim_usec_interval" VALUES('1969-12-01T19:00:00', 21.2);
CREATE TABLE "1dim_neg"(time INTEGER, temp float);
SELECT create_hypertable('"1dim_neg"', 'time', chunk_time_interval=>10);
 create_hypertable 
-------------------
 
(1 row)

INSERT INTO "1dim_neg" VALUES (-20, 21.2);
INSERT INTO "1dim_neg" VALUES (-19, 21.2);
INSERT INTO "1dim_neg" VALUES (-1, 21.2);
INSERT INTO "1dim_neg" VALUES (0, 21.2);
INSERT INTO "1dim_neg" VALUES (1, 21.2);
INSERT INTO "1dim_neg" VALUES (19, 21.2);
INSERT INTO "1dim_neg" VALUES (20, 21.2);
SELECT * FROM "1dim_pre1970";
           time           | temp 
--------------------------+------
 Mon Dec 01 19:00:00 1969 | 21.2
 Sat Dec 20 09:00:00 1969 | 25.1
 Tue Jan 20 09:00:00 1970 | 26.6
 Thu Feb 20 09:00:00 1969 | 29.9
(4 rows)

SELECT * FROM "1dim_neg";
 time | temp 
------+------
  -20 | 21.2
  -19 | 21.2
   -1 | 21.2
    0 | 21.2
    1 | 21.2
   19 | 21.2
   20 | 21.2
(7 rows)

SELECT * FROM _timescaledb_catalog.chunk;
 id | hypertable_id |      schema_name      |    table_name     
----+---------------+-----------------------+-------------------
  1 |             1 | one_Partition         | _hyper_1_1_chunk
  2 |             1 | one_Partition         | _hyper_1_2_chunk
  3 |             1 | one_Partition         | _hyper_1_3_chunk
  4 |             2 | _timescaledb_internal | _hyper_2_4_chunk
  5 |             3 | _timescaledb_internal | _hyper_3_5_chunk
  6 |             3 | _timescaledb_internal | _hyper_3_6_chunk
  7 |             3 | _timescaledb_internal | _hyper_3_7_chunk
  9 |             5 | _timescaledb_internal | _hyper_5_9_chunk
 10 |             6 | _timescaledb_internal | _hyper_6_10_chunk
 11 |             6 | _timescaledb_internal | _hyper_6_11_chunk
 12 |             6 | _timescaledb_internal | _hyper_6_12_chunk
 13 |             6 | _timescaledb_internal | _hyper_6_13_chunk
 14 |             6 | _timescaledb_internal | _hyper_6_14_chunk
(13 rows)

SELECT * FROM _timescaledb_catalog.dimension_slice;
 id | dimension_id |     range_start     |      range_end      
----+--------------+---------------------+---------------------
  1 |            1 | 1257892416000000000 | 1257895008000000000
  2 |            1 | 1257897600000000000 | 1257900192000000000
  3 |            1 | 1257985728000000000 | 1257988320000000000
  4 |            2 |    1482624000000000 |    1485216000000000
  5 |            3 |      -2592000000000 |                   0
  6 |            3 |                   0 |       2592000000000
  7 |            3 |     -28512000000000 |     -25920000000000
  9 |            5 |      -2581200000000 |      -2581199000000
 10 |            6 |                 -20 |                 -10
 11 |            6 |                 -10 |                   0
 12 |            6 |                   0 |                  10
 13 |            6 |                  10 |                  20
 14 |            6 |                  20 |                  30
(13 rows)

-- Create a three-dimensional table
CREATE TABLE "3dim" (time timestamp, temp float, device text, location text);
SELECT create_hypertable('"3dim"', 'time', 'device', 2);
 create_hypertable 
-------------------
 
(1 row)

SELECT add_dimension('"3dim"', 'location', 2);
 add_dimension 
---------------
 
(1 row)

INSERT INTO "3dim" VALUES('2017-01-20T09:00:01', 22.5, 'blue', 'nyc');
INSERT INTO "3dim" VALUES('2017-01-20T09:00:21', 21.2, 'brown', 'sthlm');
INSERT INTO "3dim" VALUES('2017-01-20T09:00:47', 25.1, 'yellow', 'la');
--show the constraints on the three-dimensional chunk
\d+ _timescaledb_internal._hyper_7_15_chunk
                      Table "_timescaledb_internal._hyper_7_15_chunk"
  Column  |            Type             | Modifiers | Storage  | Stats target | Description 
----------+-----------------------------+-----------+----------+--------------+-------------
 time     | timestamp without time zone |           | plain    |              | 
 temp     | double precision            |           | plain    |              | 
 device   | text                        |           | extended |              | 
 location | text                        |           | extended |              | 
Indexes:
    "24-3dim_time_idx" btree ("time" DESC)
    "25-3dim_device_time_idx" btree (device, "time" DESC)
Check constraints:
    "constraint_15" CHECK ("time" >= 'Sat Dec 24 16:00:00 2016'::timestamp without time zone AND "time" < 'Mon Jan 23 16:00:00 2017'::timestamp without time zone)
    "constraint_16" CHECK (_timescaledb_internal.get_partition_for_key(device) >= 0 AND _timescaledb_internal.get_partition_for_key(device) < 1073741823)
    "constraint_17" CHECK (_timescaledb_internal.get_partition_for_key(location) >= 1073741823 AND _timescaledb_internal.get_partition_for_key(location) < 2147483647)
Inherits: "3dim"

--queries should work in three dimensions
SELECT * FROM "3dim";
           time           | temp | device | location 
--------------------------+------+--------+----------
 Fri Jan 20 09:00:01 2017 | 22.5 | blue   | nyc
 Fri Jan 20 09:00:47 2017 | 25.1 | yellow | la
 Fri Jan 20 09:00:21 2017 | 21.2 | brown  | sthlm
(3 rows)

-- test that explain works
EXPLAIN
INSERT INTO "3dim" VALUES('2017-01-21T09:00:01', 32.9, 'green', 'nyc'),
                         ('2017-01-21T09:00:47', 27.3, 'purple', 'la') RETURNING *;
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Custom Scan (HypertableInsert)  (cost=0.00..0.03 rows=2 width=80)
   ->  Insert on "3dim"  (cost=0.00..0.03 rows=2 width=80)
         ->  Custom Scan (ChunkDispatch)  (cost=0.00..0.03 rows=2 width=80)
               ->  Values Scan on "*VALUES*"  (cost=0.00..0.03 rows=2 width=80)
(4 rows)

EXPLAIN
WITH "3dim_insert" AS (
     INSERT INTO "3dim" VALUES('2017-01-21T09:01:44', 19.3, 'black', 'la') RETURNING time, temp
), regular_insert AS (
   INSERT INTO regular_table VALUES('2017-01-21T10:00:51', 14.3) RETURNING time, temp
) INSERT INTO "1dim" (SELECT time, temp FROM "3dim_insert" UNION SELECT time, temp FROM regular_insert);
                                            QUERY PLAN                                             
---------------------------------------------------------------------------------------------------
 Custom Scan (HypertableInsert)  (cost=0.09..0.12 rows=2 width=16)
   ->  Insert on "1dim"  (cost=0.09..0.12 rows=2 width=16)
         CTE 3dim_insert
           ->  Custom Scan (HypertableInsert)  (cost=0.00..0.01 rows=1 width=80)
                 ->  Insert on "3dim"  (cost=0.00..0.01 rows=1 width=80)
                       ->  Custom Scan (ChunkDispatch)  (cost=0.00..0.01 rows=1 width=80)
                             ->  Result  (cost=0.00..0.01 rows=1 width=80)
         CTE regular_insert
           ->  Insert on regular_table  (cost=0.00..0.01 rows=1 width=16)
                 ->  Result  (cost=0.00..0.01 rows=1 width=16)
         ->  Custom Scan (ChunkDispatch)  (cost=0.07..0.09 rows=2 width=16)
               ->  Unique  (cost=0.07..0.09 rows=2 width=16)
                     ->  Sort  (cost=0.07..0.08 rows=2 width=16)
                           Sort Key: "3dim_insert"."time", "3dim_insert".temp
                           ->  Append  (cost=0.00..0.06 rows=2 width=16)
                                 ->  CTE Scan on "3dim_insert"  (cost=0.00..0.02 rows=1 width=16)
                                 ->  CTE Scan on regular_insert  (cost=0.00..0.02 rows=1 width=16)
(17 rows)

-- test prepared statement INSERT
PREPARE "1dim_plan" (timestamp, float) AS
INSERT INTO "1dim" VALUES($1, $2) ON CONFLICT (time) DO NOTHING;
EXECUTE "1dim_plan" ('2017-04-17 23:35', 31.4);
EXECUTE "1dim_plan" ('2017-04-17 23:35', 32.6);
-- test prepared statement with generic plan (forced when no parameters)
PREPARE "1dim_plan_generic" AS
INSERT INTO "1dim" VALUES('2017-05-18 17:24', 18.3);
EXECUTE "1dim_plan_generic";
SELECT * FROM "1dim" ORDER BY time;
           time           | temp 
--------------------------+------
 Fri Jan 20 09:00:01 2017 | 22.5
 Fri Jan 20 09:00:21 2017 | 21.2
 Fri Jan 20 09:00:47 2017 | 25.1
 Fri Jan 20 09:00:59 2017 | 29.2
 Mon Apr 17 23:35:00 2017 | 31.4
 Thu May 18 17:24:00 2017 | 18.3
(6 rows)

SELECT * FROM "3dim" ORDER BY (time, device);
           time           | temp | device | location 
--------------------------+------+--------+----------
 Fri Jan 20 09:00:01 2017 | 22.5 | blue   | nyc
 Fri Jan 20 09:00:21 2017 | 21.2 | brown  | sthlm
 Fri Jan 20 09:00:47 2017 | 25.1 | yellow | la
(3 rows)

-- Test that large intervals and no interval fail for INTEGER
\set ON_ERROR_STOP 0
CREATE TABLE "inttime_err"(time INTEGER PRIMARY KEY, temp float);
SELECT create_hypertable('"inttime_err"', 'time', chunk_time_interval=>2147483648);
ERROR:  chunk_time_interval is too large for type INTEGER (max: 2147483647)
SELECT create_hypertable('"inttime_err"', 'time');
ERROR:  chunk_time_interval needs to be explicitly set for time columns of type SMALLINT, INTEGER, and BIGINT
\set ON_ERROR_STOP 1
SELECT create_hypertable('"inttime_err"', 'time', chunk_time_interval=>2147483647);
 create_hypertable 
-------------------
 
(1 row)

-- Test that large intervals and no interval fail for SMALLINT
\set ON_ERROR_STOP 0
CREATE TABLE "smallinttime_err"(time SMALLINT PRIMARY KEY, temp float);
SELECT create_hypertable('"smallinttime_err"', 'time', chunk_time_interval=>65536);
ERROR:  chunk_time_interval is too large for type SMALLINT (max: 65535)
SELECT create_hypertable('"smallinttime_err"', 'time');
ERROR:  chunk_time_interval needs to be explicitly set for time columns of type SMALLINT, INTEGER, and BIGINT
\set ON_ERROR_STOP 1
SELECT create_hypertable('"smallinttime_err"', 'time', chunk_time_interval=>65535);
 create_hypertable 
-------------------
 
(1 row)

